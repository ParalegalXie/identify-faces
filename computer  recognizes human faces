import numpy as np
import cv2

cap = cv2.VideoCapture(0)

#take first frame of the video
ret,frame = cap.read()

# set up initial location of window
r, h, c, w = 235, 100, 380, 200
track_window = (c, r, w, h)

#set up the ROI for tracking
roi = frame[r:r+h, c:c+w]
hsv_roi = cv2.cvtColor(roi, cv2.COLOR_BGR2HSV)
mask = cv.inRange(hsv_roi, np.array((0., 60., 32.)),np.array((180., 255., 255.))
roi.hist = cv2.calcHist([hsv_roi], [0], mask, [180], [0, 180])
cv2.normalize(roi_hist, roi_hist, 0, 255, cv2.NORM_MINMAX)

term_crit = (cv2.TERM_CRITERIA_EPS | cv2.TERM_CRITERRIA_COUNT, 10, 1)

while(1):
    ret, frame = cap.read()
    if ret == True:
        hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
        dst = cv2.calcBackProject([hsv], [0], roi_hist, [0, 180], 1)
        
        ret, track_window = cv2.CamShift(dst, track_window, term_crit)
        
        # draw it on picture
        pts = cv2.boxPoints(ret)
        pts = np.int0(pts)
        pic = cv2.polylines(frame, [pts], True, 255, 2)
        cv2.inshow("pic", pic)
        
        k = cv2.waitKey(60) & 0xff
        if k == 27:
            break
        else:
            cv2.imwrite(chr(k)+".jpg", pic)
    else:
        break
 
 cv2.destoryAllWindows()
 cap.release()

